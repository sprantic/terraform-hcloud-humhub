#!/bin/bash
# HumHub application backup script
# Generated by Terraform/Ansible

set -e

BACKUP_DIR="/opt/humhub-backups"
DATE=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="humhub_app_${DATE}.tar.gz"
RETENTION_DAYS={{ backup_retention_days | default(7) }}
HUMHUB_DIR="/var/www/humhub"

# Create backup directory if it doesn't exist
mkdir -p "$BACKUP_DIR"

# Create application backup
echo "Creating HumHub application backup: $BACKUP_FILE"

# Create temporary directory for backup
TEMP_DIR=$(mktemp -d)
BACKUP_TEMP="$TEMP_DIR/humhub_backup"
mkdir -p "$BACKUP_TEMP"

# Copy important directories
echo "Backing up uploads directory..."
cp -r "$HUMHUB_DIR/uploads" "$BACKUP_TEMP/" 2>/dev/null || echo "No uploads directory found"

echo "Backing up protected/config directory..."
cp -r "$HUMHUB_DIR/protected/config" "$BACKUP_TEMP/" 2>/dev/null || echo "No config directory found"

echo "Backing up protected/modules directory..."
cp -r "$HUMHUB_DIR/protected/modules" "$BACKUP_TEMP/" 2>/dev/null || echo "No custom modules found"

echo "Backing up themes directory..."
cp -r "$HUMHUB_DIR/themes" "$BACKUP_TEMP/" 2>/dev/null || echo "No custom themes found"

# Create compressed archive
cd "$TEMP_DIR"
tar -czf "$BACKUP_DIR/$BACKUP_FILE" humhub_backup/

# Clean up temporary directory
rm -rf "$TEMP_DIR"

# Verify backup was created
if [ -f "$BACKUP_DIR/$BACKUP_FILE" ]; then
    echo "Backup created successfully: $BACKUP_DIR/$BACKUP_FILE"
    echo "Backup size: $(du -h "$BACKUP_DIR/$BACKUP_FILE" | cut -f1)"
else
    echo "ERROR: Backup failed!"
    exit 1
fi

# Clean up old backups
echo "Cleaning up backups older than $RETENTION_DAYS days..."
find "$BACKUP_DIR" -name "humhub_app_*.tar.gz" -mtime +$RETENTION_DAYS -delete

# List remaining backups
echo "Current backups:"
ls -lah "$BACKUP_DIR"/humhub_app_*.tar.gz 2>/dev/null || echo "No backups found"

echo "HumHub application backup completed successfully"